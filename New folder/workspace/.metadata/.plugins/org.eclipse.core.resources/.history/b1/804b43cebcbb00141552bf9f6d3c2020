package testSlick2D;

import org.newdawn.slick.Animation;
import org.newdawn.slick.Color;
import org.newdawn.slick.GameContainer;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.Image;
import org.newdawn.slick.Input;
import org.newdawn.slick.SlickException;
import org.newdawn.slick.state.BasicGameState;
import org.newdawn.slick.state.StateBasedGame;
import org.newdawn.slick.state.transition.FadeInTransition;
import org.newdawn.slick.state.transition.FadeOutTransition;

public class Menu extends BasicGameState {

	
	public static final int ID = 0; //Set the state's I.D 
	
	private AnimatedButton loadGameButton;
	private AnimatedButton newGameButton;
	private Animation animationButton;
	private StateBasedGame game; 
	
	@Override
	public void init(GameContainer gc, StateBasedGame stateGame)
			throws SlickException {
		this.game = stateGame; //VERY IMPORTANT. 
							   //We need to use this variable in the key released method to change states.
		Image []  loadingImages = {new Image("res/Sprial1.png"), new Image("res/sprial2.png"), new Image ("res/sprial 3.png")}; 
		int [] duration = {100,100,100};
		animationButton = new Animation (loadingImages, duration,false);
	
		newGameButton = new AnimatedButton(gc, animationButton, 440, 200, stateGame, Menu.ID);
		loadGameButton = new AnimatedButton(gc, animationButton, 440, 300, stateGame, Menu.ID);
		
		newGameButton.add(new ButtonAction(){ 
			public void perform(){
		
			game.enterState(Game.ID, new FadeOutTransition(Color.black), new FadeInTransition(Color.black));		
			}
		});
		
		
	
	}

	@Override
	public void render(GameContainer gc, StateBasedGame stateGame, Graphics g)
			throws SlickException {
		gc.setShowFPS(false); //Annoying FPS counter is hidden

		g.setColor(Color.white); //Sets strings to draw in the color white
	    g.drawString("Menu Screen", 440, 110); // Draws string to screen.
	    									   // Ditto Below.
	    g.drawString("1. Play Game", 440, 200);
	    g.drawString("2. Continue", 440, 300);
	    g.drawString("3. Quit", 540, 340);
	    newGameButton.render(gc, g);
	    loadGameButton.render(gc,g);
	    
	    
	}

	@Override
	public void update(GameContainer gc, StateBasedGame stateGame, int delta)
			throws SlickException {
			//In game loops this is how it changes what's seen on screen. 
			//Say A character is supposed to move 5 pixels left because of 
			//Player input. Well this is where we would put that stuff.
	}

	public void keyReleased (int key, char c){
		switch (key) {
		case Input.KEY_1:
			//Enters state given the ID and uses the basic transition.
			game.enterState(Game.ID, new FadeOutTransition(Color.black), new FadeInTransition(Color.black));		
			break;
		case Input.KEY_2:
			game.enterState(LoadGame.ID, new FadeOutTransition(Color.white), new FadeInTransition(Color.white) );
			break;
		case Input.KEY_3:
			GameContainer gc = game.getContainer();//Had to instantiate. I could've also made this another class variable.
			gc.exit();//Exits game. 
			break;
		}
	}
	
	@Override
	public int getID() {
		return ID;//ALSO very important. This is how the stateManager knows what we set the ID's of our states.
	}

}
